# handlers/client.py

"""–ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤: –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ–Ω—é, —Ä–∞–±–æ—Ç–∞ —Å –æ—Ç–∑—ã–≤–∞–º–∏ –∏ –∞–∫—Ü–∏—è–º–∏.

–ó–¥–µ—Å—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è:
    - –í–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    - –ú–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ—Ç–∑—ã–≤–æ–≤ –∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤.
    - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–∫—Ü–∏–π, –±–æ–Ω—É—Å–æ–≤ –∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤.
    - –ö–æ–Ω—Ç–∞–∫—Ç–∞ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –æ–ø—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤.
"""

import random
from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

from bot import dp, bot
from db import cursor, db
from config import ADMIN_IDS
from handlers.start import start

btn_back = InlineKeyboardButton('–ú–µ–Ω—é', callback_data='back')
btn_back_in = InlineKeyboardButton('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='backin')

@dp.message_handler(text='–ú–µ–Ω—é', state="*")
async def handle_menu_message(message: types.Message, state: FSMContext):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è "–ú–µ–Ω—é".
    
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å) –ø–µ—Ä–µ–¥ –≤–æ–∑–≤—Ä–∞—Ç–æ–º –≤ –º–µ–Ω—é.
    """
    current_state = await state.get_state()
    if current_state is None:
        await start(message)
    else:
        await state.finish()
        await start(message)

@dp.callback_query_handler(text='backin', state="*")
async def back_in_menu(callback: types.CallbackQuery, state: FSMContext):
    """
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ inline-—Ä–µ–∂–∏–º–µ.
    """
    await state.finish()
    await start(callback, inline=True)
    await callback.answer()

@dp.callback_query_handler(text='back')
async def handle_back(callback: types.CallbackQuery):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤ inline-—Ä–µ–∂–∏–º–µ.
    """
    await start(callback, inline=True)
    await callback.answer()

@dp.callback_query_handler(text='otz')
async def handle_otz_callback(callback_query: types.CallbackQuery):
    """
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –≤—Å–µ –æ—Ç–∑—ã–≤—ã –∏–∑ —Ç–∞–±–ª–∏—Ü—ã "otz" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    
    –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–Ω–∞—á–∞–ª–∞ –∏–º—è –∞–≤—Ç–æ—Ä–∞, –∑–∞—Ç–µ–º –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    for item in cursor.execute('SELECT * FROM otz').fetchall():
        # item[2] - —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞, item[0] –∏ item[1] - –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        await bot.send_message(callback_query.from_user.id, item[2] + ":")
        await bot.forward_message(callback_query.from_user.id, item[0], item[1])
    await start(callback_query, inline=True)

@dp.callback_query_handler(text='–û—Ç–∑—ã–≤—ã')
async def handle_feedbacks_callback(callback_query: types.CallbackQuery):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ó–∞–ø–æ—Å—Ç–∏—Ç—å", "–£–¥–∞–ª–∏—Ç—å" –∏ "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å".
    
    –ï—Å–ª–∏ –Ω–µ—Ç –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤, –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
    """
    try:
        for item in cursor.execute('SELECT * FROM feedbacks').fetchall():
            kb = InlineKeyboardMarkup(row_width=2)
            await bot.forward_message(callback_query.from_user.id, item[0], item[1])
            # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∑—ã–≤–∞
            await bot.send_message(
                callback_query.from_user.id,
                '|\n' + item[2],
                reply_markup=kb.add(
                    InlineKeyboardButton('–ó–∞–ø–æ—Å—Ç–∏—Ç—å', callback_data=f'feedback_add|{item[0]}|{item[1]}|{item[2]}'),
                    InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data=f'feedback_del|{item[0]}|{item[1]}'),
                    InlineKeyboardButton('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'feedback_ban{item[0]}')
                )
            )
    except Exception:
        await callback_query.answer('–ù–µ—Ç –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.', show_alert=True)
    await start(callback_query, inline=True)

@dp.callback_query_handler(Text(startswith='feedback_add'))
async def handle_feedback_add(callback_query: types.CallbackQuery):
    """
    –ü–µ—Ä–µ–Ω–æ—Å–∏—Ç –æ—Ç–∑—ã–≤ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è –≤ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤—ã –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ –æ—á–µ—Ä–µ–¥–∏.
    
    –†–∞–∑–±–∏–≤–∞–µ—Ç callback_data –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é '|' –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤.
    """
    data = callback_query.data.split('|')
    cursor.execute('INSERT INTO otz VALUES (?,?,?)', (int(data[1]), int(data[2]), data[3]))
    cursor.execute('DELETE FROM feedbacks WHERE chat=? AND message=?', (int(data[1]), int(data[2])))
    db.commit()
    await callback_query.answer('–û—Ç–∑—ã–≤ –∑–∞–ø–æ—Å—Ç–µ–Ω', show_alert=True)

@dp.callback_query_handler(Text(startswith='feedback_del'))
async def handle_feedback_delete(callback_query: types.CallbackQuery):
    """
    –£–¥–∞–ª—è–µ—Ç –æ—Ç–∑—ã–≤ –∏–∑ –æ—á–µ—Ä–µ–¥–∏ –æ–∂–∏–¥–∞–Ω–∏—è.
    
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã, –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –∏–∑ callback_data.
    """
    data = callback_query.data.split('|')
    cursor.execute('DELETE FROM feedbacks WHERE chat=? AND message=?', (int(data[1]), int(data[2])))
    db.commit()
    await callback_query.answer('–û—Ç–∑—ã–≤ —É–¥–∞–ª—ë–Ω', show_alert=True)

@dp.callback_query_handler(Text(startswith='feedback_ban'))
async def handle_feedback_ban(callback_query: types.CallbackQuery):
    """
    –ë–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –æ—Ç–∑—ã–≤–µ, –∏ —É–¥–∞–ª—è–µ—Ç –≤—Å–µ –µ–≥–æ –æ–∂–∏–¥–∞—é—â–∏–µ –æ—Ç–∑—ã–≤—ã.
    
    –ò–∑ callback_data –∏–∑–≤–ª–µ–∫–∞–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = callback_query.data[len("feedback_ban"):]
    cursor.execute('UPDATE id SET ban = 1 WHERE users=?', (str(user_id),))
    cursor.execute('DELETE FROM feedbacks WHERE chat=?', (int(user_id),))
    db.commit()
    await callback_query.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω', show_alert=True)

@dp.callback_query_handler(text='sales')
async def handle_sales_callback(callback_query: types.CallbackQuery):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –∞–∫—Ü–∏–∏ –∏ –±–æ–Ω—É—Å—ã, –∞ —Ç–∞–∫–∂–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    
    –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–ø–µ—Ä–≤—ã–µ, –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –±–æ–Ω—É—Å "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å".
    """
    kb = InlineKeyboardMarkup(row_width=1)
    if cursor.execute('SELECT first_client FROM id WHERE users=?', (str(callback_query.from_user.id),)).fetchone()[0] == 1:
        kb.insert(InlineKeyboardButton('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ–Ω—É—Å', callback_data='first_buy'))
    for item in cursor.execute('SELECT * FROM sales').fetchall():
        kb.insert(InlineKeyboardButton(item[0], callback_data=f'sale{item[2]}'))
    await callback_query.message.edit_text('–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∞–∫—Ü–∏–∏üéÅ')
    if callback_query.from_user.id in ADMIN_IDS:
        kb.add(
            InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å', callback_data='–î–æ–±–∞–≤–∏—Ç—å–∞–∫—Ü–∏—é'),
            InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data='–£–¥–∞–ª–∏—Ç—å–∞–∫—Ü–∏—é')
        )
    kb.add(btn_back_in)
    await callback_query.message.edit_reply_markup(kb)
    await callback_query.answer()

@dp.callback_query_handler(Text(startswith='sale'))
async def handle_sale_detail(callback_query: types.CallbackQuery):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∞–∫—Ü–∏–∏.
    
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–∫—Ü–∏–∏ –∏–∑ callback_data.
    """
    sale_id = callback_query.data[4:]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –Ω–∞—á–∏–Ω–∞—è —Å 5-–≥–æ —Å–∏–º–≤–æ–ª–∞
    desc = cursor.execute('SELECT desc FROM sales WHERE id=?', (sale_id,)).fetchone()[0]
    await callback_query.message.edit_text(desc)
    await callback_query.message.edit_reply_markup(InlineKeyboardMarkup(row_width=1).add(btn_back_in))
    await callback_query.answer()

@dp.callback_query_handler(text="first_buy")
async def handle_first_buy(callback_query: types.CallbackQuery):
    """
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å–∫–∏–¥–∫—É –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    cursor.execute('UPDATE id SET first_pressed=1 WHERE users=?', (str(callback_query.from_user.id),))
    cursor.execute('UPDATE id SET first_client=0 WHERE users=?', (str(callback_query.from_user.id),))
    db.commit()
    await callback_query.message.edit_text('–¶–µ–Ω–∞ –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑ —Å–Ω–∏–∂–µ–Ω–∞ –Ω–∞ 10%.')
    await callback_query.message.edit_reply_markup(InlineKeyboardMarkup(row_width=1).add(btn_back_in))
    await callback_query.answer()

@dp.callback_query_handler(text="history")
async def handle_history_callback(callback_query: types.CallbackQuery):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∫—É–ø–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    history = cursor.execute('SELECT history FROM id WHERE users=?', (str(callback_query.from_user.id),)).fetchone()[0]
    await callback_query.message.edit_text(history)
    await callback_query.message.edit_reply_markup(InlineKeyboardMarkup(row_width=1).add(btn_back_in))
    await callback_query.answer()

### –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∏ –æ–ø—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤

@dp.callback_query_handler(Text('–°–≤—è–∑—å —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–ºüë®‚Äçüíª'))
async def handle_contact_manager(callback_query: types.CallbackQuery):
    """
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –∏–ª–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –æ–ø—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞.
    """
    markup = InlineKeyboardMarkup(row_width=2)
    btn_trouble = InlineKeyboardButton("–ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–æ–¥–∞–Ω–Ω–æ–π –µ–¥–∏–Ω–∏—Ü–µ–π‚õîÔ∏è", callback_data='trouble')
    btn_invite = InlineKeyboardButton("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ü§ù", callback_data='–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ü§ù')
    btn_bulk = InlineKeyboardButton("–ó–∞–∫–∞–∑–∞—Ç—å –æ–ø—Ç–æ–ºüì¶", callback_data='opt')
    markup.add(btn_trouble)
    markup.add(btn_invite)
    markup.add(btn_bulk, btn_back)
    await callback_query.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å")
    await callback_query.message.edit_reply_markup(markup)
    await callback_query.answer()

@dp.callback_query_handler(Text('opt'))
async def handle_bulk_order(callback_query: types.CallbackQuery):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ª–æ–≤–∏—è—Ö –æ–ø—Ç–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–∞—Ä–∏–∞–Ω—Ç —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.
    """
    markup = InlineKeyboardMarkup(row_width=2)
    btn_manager = InlineKeyboardButton("–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—Éüë®‚Äçüíª", callback_data='–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—Éüë®‚Äçüíª')
    markup.add(btn_manager)
    markup.add(btn_back)
    await callback_query.message.edit_text(
        "1. –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞ 5000‚ÇΩ \n\n"
        "2. –£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –°–î–≠–ö–æ–º. –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–µ—Å–∞ –∏ –æ–±—ä—ë–º–æ–≤.\n\n"
        "3. –û–ø–ª–∞—Ç–∞: –ø–æ–ª–Ω–∞—è —Å—É–º–º–∞ –Ω–∞ –∫–∞—Ä—Ç—É –°–±–µ—Ä–±–∞–Ω–∫.\n\n"
        "4. –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞: –§–ò–û, –∞–¥—Ä–µ—Å, –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∏–Ω–¥–µ–∫—Å.\n\n"
        "5. –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞: –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –≤–∫—É—Å - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ.\n\n"
        "6. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –∑–∞–∫–∞–∑ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 1-3 –¥–Ω–µ–π.\n\n"
        "–í–∞–∂–Ω–æ: —Ñ–∞–±—Ä–∏—á–Ω—ã–π –±—Ä–∞–∫ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è!"
    )
    await callback_query.message.edit_reply_markup(markup)
    await callback_query.answer()

@dp.callback_query_handler(Text('trouble'))
async def handle_trouble_callback(callback_query: types.CallbackQuery):
    """
    –í—ã–≤–æ–¥–∏—Ç –ø—Ä–∞–≤–∏–ª–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞/–æ–±–º–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.
    """
    markup = InlineKeyboardMarkup(row_width=2)
    btn_manager = InlineKeyboardButton("–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—Éüë®‚Äçüíª", callback_data='–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—Éüë®‚Äçüíª')
    markup.add(btn_manager)
    markup.add(btn_back)
    await callback_query.message.edit_text(
        "–ü—Ä–∞–≤–∏–ª–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞:\n–û–±–º–µ–Ω –≤–æ–∑–º–æ–∂–µ–Ω –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –±—Ä–∞–∫–∞ –≤ —Ç–æ–≤–∞—Ä–µ. –û–±–º–µ–Ω —Ç–æ–≤–∞—Ä–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 18 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏."
    )
    await callback_query.message.edit_reply_markup(markup)
    await callback_query.answer()

@dp.callback_query_handler(Text(('–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—Éüë®‚Äçüíª', '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞ü§ù')))
async def handle_contact_or_proposal(callback_query: types.CallbackQuery):
    """
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –¥–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–ª–∏ –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–∞.
    """
    await callback_query.message.edit_text('–°—Å—ã–ª–∫–∞ –Ω–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞')
    await callback_query.message.edit_reply_markup(
        InlineKeyboardMarkup(row_width=2).add(
            InlineKeyboardButton("Smoko_adm", url='https://t.me/Smoko_adm'),
            btn_back
        )
    )
    await callback_query.answer()

@dp.callback_query_handler(Text(startswith='askManager '))
async def handle_manager_query(callback_query: types.CallbackQuery):
    """
    –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–Ω–æ–Ω–∏–º–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç, –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –¥–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.
    """
    user_id = callback_query.data[len("askManager "):]
    await bot.send_message(user_id,
                        '–ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –º–æ–∂–µ—Ç —Å –≤–∞–º–∏ —Å–≤—è–∑–∞—Ç—å—Å—è, —Ç–∞–∫ –∫–∞–∫ —É –≤–∞—Å –∞–Ω–æ–Ω–∏–º–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –º–µ–Ω–µ–¥–∂–µ—Ä –º–æ–≥ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –≤–∞–º–∏.',
                        reply_markup=InlineKeyboardMarkup().add(
                            InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä', callback_data=f'sendContact {user_id}')
                        ))
    await callback_query.answer()

@dp.callback_query_handler(Text(startswith='sendContact '))
async def handle_send_contact_prompt(callback_query: types.CallbackQuery):
    """
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è —Å–≤—è–∑–∏ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.
    """
    await bot.send_message(callback_query.data[len("sendContact "):],
                        '–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –º–µ–Ω–µ–¥–∂–µ—Ä—É.',
                        reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(
                            KeyboardButton('–ü–µ—Ä–µ–¥–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç', request_contact=True)
                        ).add(btn_back))
    await callback_query.answer()

@dp.message_handler(content_types=['contact'])
async def handle_contact_message(message: types.Message):
    """
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.
    """
    for admin in ADMIN_IDS:
        await bot.forward_message(admin, message.chat.id, message.message_id)
    await message.answer('–°–ø–∞—Å–∏–±–æ, –≤–∞—à –Ω–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω', reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).add(btn_back))

@dp.message_handler()
async def handle_default_message(message: types.Message):
    """
    –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º –∫–æ–º–∞–Ω–¥–∞–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    –í —Å–ª—É—á–∞–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º–∏ –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, –æ—Ç–≤–µ—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–º –ø—Ä–∏–∫–æ–ª–æ–º.
    """
    if message.text.lower() not in ['—Å–∫–∏–ø–∞', '–ª—ë—Ö–∞', '–ª–µ—Ö–∞']:
        await start(message)
    else:
        responses = [
            "–±–ª—è–¥—å, —á—Ç–æ –Ω–µ –æ—Ç–Ω—è—Ç—å", "–ø–∏–≤–Ω–∞—è –º—Ä–∞–∑—å", "—Å—ã–Ω —Ñ–∞–Ω–∫–∏ –±–∞—Ä–∞", "–ø–µ—Ä–µ—Ç—Ä–∞—Ö–∞–Ω–Ω—ã–π —Å–µ—Ä–∂–∞–Ω—Ç, –Ω–µ–¥–æ—Ç—Ä–∞—Ö–∞–Ω–Ω—ã–π –æ—Ñ–∏—Ü–µ—Ä",
            "–±–æ—Ä–µ—Ü —Å —Å–æ–ª—å—é", "—Ä—è–¥–æ–≤–æ–π –æ—Ç—Ä—è–¥–∞ –±—ã—Å—Ç—Ä–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ –ø–∏–≤–∞", "–∫–∞—Å—Ç—Ä–∞—Ç", "—Å–µ–≥–æ–¥–Ω—è –≤–æ—Ä, –∑–∞–≤—Ç—Ä–∞ –ø—Ä–æ–∫—É—Ä–æ—Ä",
            "—Ä–∞–¥–∏–∫–∞–ª—å–Ω—ã–π –ø–∏–∑–¥–æ–ª–∏–∑", "–∫–æ–∑–ª–∏–Ω–æ–µ —Ä—ã–ª–æ", "–≤—Å–µ —Å–≤–æ–µ –≤ –∫–∞—Ä—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª", "–∞–ø–æ—Ñ–µ–æ–∑ –¥–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏",
            "–ø—è—Ç–∏–∫—Ä–∞—Ç–Ω—ã–π –ø–∏–∑–¥–∞–±–æ–ª –ø–æ —Ä–∞–π–æ–Ω—É", "—Ü–∞—Ä—å, –∫–∞–±–ª—É–∫ –µ–≥–æ –∫–æ—Ä–æ–Ω–∞", "–≤ —Å—Ä–∞–∫—É –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π", "–ø–æ –µ–±–ª—É –ø–æ–∫–æ–π–Ω–∏—Ü–∞, –ø–æ –ø–∏–∑–¥–µ —Ä–∞–∑–±–æ–π–Ω–∏—Ü–∞",
            "–ø—É—Å—Ç–∞—è —Ç—Ä–∞—Ç–∞ —Å–ø–µ—Ä–º—ã", "–º–µ—Ñ-–∞–≤–∏–∞—Ü–∏—è", "—Å—Ç–∞—Ñ–∏–ª–æ–∫–æ–∫–∫–æ–≤–∞—è —à–ª—é—Ö–∞", "—Ö—É–π –≤ –∫–∞–±–∞–Ω—å–µ–º –∂–∏—Ä—É", "–∫–∞–ª –∫–∞–ª—ã—á",
            "–≤–Ω–µ–±—Ä–∞—á–Ω—ã–π —Å—ã–Ω —Ç–∞–π—Å–∫–æ–π —à–ª—é—Ö–∏", "–∫–≤–∞—Ä—à–Ω—è", "—Ä—ã–Ω–æ—á–Ω–∞—è –º—Ä–∞–∑–æ—Ç–∞", "–ø—É–∑–æ—á—ë—Å", "–ø—Ä–µ–º—å–µ—Ä-–º–∏–Ω–∏—Å—Ç—Ä –µ–±–ª–∞–Ω–∏–∏",
            "–≥–Ω–æ–π–Ω–∞—è –∑–∞–ª—É–ø–∞", "–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–º–±–∞—Å—Å–∞–¥–æ—Ä –Ω–∞–ø–∏—Ç–∫–æ–≤ —Å—É—à–Ω—è–∫", "–ª–æ—Ö", "–ø–æ–ø–µ—Ä–µ–∫ –ø–∏–∑–¥—ã —Ä–æ–∂–¥–µ–Ω–Ω—ã–π",
            "—à–∞–∫–∞–ª —Å –∫–∞–∑–±–µ–∫—Å–∫–æ–π", "–±—É–±–Ω–æ–≤—ã–π –≤–∞–ª–µ—Ç", "–∂–∏–¥–∫–∏–π –≤–æ–∑–¥—É—Ö–∞–Ω", "–∫–ª–µ—â–µ–≤–∏–¥–Ω—ã–π —Å–ª–∏–∑–Ω—è–∫", "–≥—Ä–æ–∑–∞ —Ä–∞–π–æ–Ω—Å–∫–∏—Ö —Å–æ–±–∞–∫",
            "—Å–∞–¥–æ–≤—ã–π –≥–Ω–æ–º", "—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π —Å–µ–ª–µ–∑–µ–Ω—å", "–æ—Å–ª–∏–Ω–∞—è –∑–∞–ª—É–ø–∞", "—à–ø–∞–∫–æ–≤–∞—è —à–∞–±–æ–ª–¥–∞", "—Ç—É—Ö–ª–∞—è —à–ª—é—Ö–∞",
            "–≥–∞–∑–æ–Ω—é—Ö–∏—á", "–ø—É–ø–∫–∏–Ω –∑–∞–ª—É–ø–∫–∏–Ω", "–≥–æ–≤–Ω–æ–º–µ—Ç", "–º–µ—Ä–∑–∫–∞—è –ø–∞—Ä–æ–¥–∏—è –Ω–∞ —á–µ–ª–æ–≤–µ–∫–∞", "–º–æ—á–µ–≤–æ–∑", "—à–∞–ª–∞–≤–∞ –Ω–∞ –Ω–æ—á—å",
            "–∫–æ–∫–∞–∏–Ω–æ–≤–∞—è –º—Ä–∞–∑—å", "—Å–Ω—é—Å–æ–≤—ã–π —á—É–ø–∞—á—É–ø—Å", "–≥–µ—Ä–æ–∏–Ω–æ–≤–∞—è –ø–ª–µ–Ω–Ω–∏—Ü–∞", "–º–µ—Ñ–µ–¥—Ä–æ–Ω–æ–≤–∞—è –¥–∞–ª–±–æ–µ–±–∫–∞", "—Å–æ–ª–µ–≤–∞—è –¥–∞–≤–∞–ª–∫–∞"
        ]
        await message.answer(random.choice(responses))
